[{"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\index.js":"1","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\App.js":"2","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\SingleCard.js":"3","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\Theme.js":"4","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\MainIntegrify.js":"5","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\ButtonBack.js":"6","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\CardIntegrify.js":"7","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\ButtonComponent.js":"8"},{"size":200,"mtime":1610909427725,"results":"9","hashOfConfig":"10"},{"size":640,"mtime":1610908865083,"results":"11","hashOfConfig":"10"},{"size":2364,"mtime":1610908945248,"results":"12","hashOfConfig":"10"},{"size":449,"mtime":1610908958666,"results":"13","hashOfConfig":"10"},{"size":826,"mtime":1610908931645,"results":"14","hashOfConfig":"10"},{"size":374,"mtime":1610908862025,"results":"15","hashOfConfig":"10"},{"size":1475,"mtime":1610908917920,"results":"16","hashOfConfig":"10"},{"size":407,"mtime":1610908898873,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e6cg6d",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\index.js",[],"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\App.js",[],["37","38"],"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\SingleCard.js",["39","40"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useParams } from 'react-router-dom'\r\nimport ButtonBack from './ButtonBack'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n}))\r\n\r\nconst SingleCard = ({ data }) => {\r\n\r\n    const { id } = useParams();\r\n\r\n    const [integrifySingle, setIntegrifySingle] = useState();\r\n    useEffect(() => {\r\n        const getRequest = async () => {\r\n            try {\r\n                const response = await axios.get('https://jsonplaceholder.typicode.com/users/' + id);\r\n                setIntegrifySingle(response.data);\r\n\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getRequest();\r\n\r\n    }, []);\r\n\r\n\r\n\r\n    return (\r\n\r\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" style={{ marginTop: \"10em\" }} >\r\n            {integrifySingle ?\r\n                <Grid>\r\n                    <Card style={{ padding: \"2em\", backgroundColor: \"gray\" }}>\r\n                        <Typography>-Name: {integrifySingle.name}</Typography>\r\n                        <Typography>-User Name: {integrifySingle.username}</Typography>\r\n                        <Typography>-Email: {integrifySingle.email}</Typography>\r\n                        <Typography>-Phone: {integrifySingle.phone}</Typography>\r\n                        <Typography>-Company: {integrifySingle.company[\"name\"]}</Typography>\r\n                        <Typography>-Website: {integrifySingle.website}</Typography>\r\n                        <Typography>-Address:</Typography>\r\n                        <ul>\r\n                            <li>Street: {integrifySingle.address[\"street\"]}</li>\r\n                            <li>Suite: {integrifySingle.address[\"suite\"]}</li>\r\n                            <li>City: {integrifySingle.address[\"city\"]}</li>\r\n                            <li>Zipcode: {integrifySingle.address[\"zipcode\"]}</li>\r\n                        </ul>\r\n\r\n                    </Card>\r\n                </Grid> : null}\r\n            <Grid item>\r\n                <ButtonBack />\r\n            </Grid>\r\n        </Grid>\r\n\r\n    );\r\n}\r\n\r\nexport default SingleCard;","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\Theme.js",[],"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\MainIntegrify.js",[],"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\ButtonBack.js",[],"C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\CardIntegrify.js",["41"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Card from '@material-ui/core/Card'\r\nimport ButtonComponent from './ButtonComponent'\r\n\r\n\r\nconst CardIntegrify = ({ data }) => {\r\n    return (\r\n\r\n        <Grid container justify=\"center\">\r\n            { data ? data.map((list, index) => (\r\n                <Card style={{ backgroundColor: \"white\", marginBottom: \"1em\", width: \"30em\", marginRight: \"1em\", padding: \"2em\" }}>\r\n                    <Grid item container key={index} direction=\"column\" alignItems=\"center\" >\r\n                        {list ?\r\n                            <Avatar>{list.name}</Avatar>\r\n                            : null}\r\n\r\n                        <Grid item>\r\n                            <Typography>{list.name}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography>@{list.username}</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography><a>http://{list.website}</a></Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <ButtonComponent id={list.id} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Card>\r\n            )) : null}\r\n        </Grid >\r\n\r\n    );\r\n}\r\nexport default CardIntegrify;","C:\\Users\\Hasan\\juuso\\material_ui\\integrify_assignment\\src\\ButtonComponent.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":11,"column":7,"nodeType":"48","messageId":"49","endLine":11,"endColumn":16},{"ruleId":"50","severity":1,"message":"51","line":33,"column":8,"nodeType":"52","endLine":33,"endColumn":10,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":27,"column":41,"nodeType":"56","endLine":27,"endColumn":44},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'useStyles' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["59"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [id]",{"range":"62","text":"63"},[929,931],"[id]"]